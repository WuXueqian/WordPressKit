<article id="post-3689" class="post-3689 wp-parser-function type-wp-parser-function status-publish hentry wp-parser-source-file-wp-includes_category-template-php wp-parser-package-template wp-parser-package-wordpress wp-parser-since-2-3-0">

	
	<h1><a href="https://developer.wordpress.org/reference/functions/wp_generate_tag_cloud/">wp_generate_tag_cloud ( <span class="arg-type">array</span>&nbsp;<span class="arg-name">$tags</span>,  <span class="arg-type">string|array</span>&nbsp;<span class="arg-name">$args</span>&nbsp;=&nbsp;<span class="arg-default">''</span> )</a></h1>

	<section class="summary">
		<p>Generates a tag cloud (heatmap) from provided data.</p>
	</section>


	<section class="description">
		<p>The text size is set by the &#8216;smallest&#8217; and &#8216;largest&#8217; arguments, which will use the &#8216;unit&#8217; argument value for the CSS text size unit. The &#8216;format&#8217; argument can be &#8216;flat&#8217; (default), &#8216;list&#8217;, or &#8216;array&#8217;. The flat value for the &#8216;format&#8217; argument will separate tags with spaces. The list value for the &#8216;format&#8217; argument will format the tags in a UL HTML list. The array value for the &#8216;format&#8217; argument will return in PHP array type format.</p>
<p>The &#8216;tag_cloud_sort&#8217; filter allows you to override the sorting. Passed to the filter: $tags array and $args array, has to return the $tags array after sorting it.</p>
<p>The &#8216;orderby&#8217; argument will accept &#8216;name&#8217; or &#8216;count&#8217; and defaults to &#8216;name&#8217;. The &#8216;order&#8217; is the direction to sort, defaults to &#8216;ASC&#8217; and can be &#8216;DESC&#8217; or &#8216;RAND&#8217;.</p>
<p>The &#8216;number&#8217; argument is how many tags to return. By default, the limit will be to return the entire tag cloud list.</p>
<p>The &#8216;topic_count_text&#8217; argument is a nooped plural from _n_noop() to generate the text for the tooltip of the tag link.</p>
<p>The &#8216;topic_count_text_callback&#8217; argument is a function, which given the count of the posts with that tag returns a text for the tooltip of the tag link.</p>
	</section>

			<section class="return"><p><strong>Return:</strong> <span class='return-type'>(string|array)</span> Tag cloud as a string or an array, depending on 'format' argument.</p></section>
	
			<section class="source">
			<p>
				<strong>Source file:</strong>
				<a href="https://developer.wordpress.org/reference/files/wp-includes/category-template.php/">wp-includes/category-template.php</a>
			</p>
						<p>
				<a href="#source-code">View source</a>
			</p>
					</section>
	
		<hr/>
	<section class="parameters">
		<h2>Parameters</h2>
		<dl>
									<dt>$tags</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="array">array</span>)</span>
															<span class="required">(Required)</span>
															<span class="description">List of tags.</span>
									</p>
							</dd>
									<dt>$args</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="string">string</span>|<span class="array">array</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description"> override default arguments.</span>
									</p>
								<p class="default">Default value: ''</p>
							</dd>
					</dl>
	</section>
	
	
	
	
			<hr id="usage" />
		<section class="usage">
			<article class="used-by">
				<h2>Used by</h2>
				<ul>
												<li>
								<span>wp-admin/includes/plugin-install.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/install_dashboard/">install_dashboard()</a>
							</li>
													<li>
								<span>wp-admin/includes/ajax-actions.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_ajax_get_tagcloud/">wp_ajax_get_tagcloud()</a>
							</li>
													<li>
								<span>wp-includes/category-template.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_tag_cloud/">wp_tag_cloud()</a>
							</li>
																</ul>
			</article>