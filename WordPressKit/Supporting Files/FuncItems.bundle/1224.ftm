<article id="post-1884" class="post-1884 wp-parser-function type-wp-parser-function status-publish hentry wp-parser-source-file-wp-includes_plugin-php wp-parser-package-plugin wp-parser-package-wordpress wp-parser-since-2-7-0">

	
	<h1><a href="https://developer.wordpress.org/reference/functions/register_uninstall_hook/">register_uninstall_hook ( <span class="arg-type">string</span>&nbsp;<span class="arg-name">$file</span>,  <span class="arg-type">callback</span>&nbsp;<span class="arg-name">$callback</span> )</a></h1>

	<section class="summary">
		<p>Set the uninstallation hook for a plugin.</p>
	</section>


	<section class="description">
		<p>Registers the uninstall hook that will be called when the user clicks on the uninstall link that calls for the plugin to uninstall itself. The link won&#8217;t be active unless the plugin hooks into the action.</p>
<p>The plugin should not run arbitrary code outside of functions, when registering the uninstall hook. In order to run using the hook, the plugin will have to be included, which means that any code laying outside of a function will be run during the uninstall process. The plugin should not hinder the uninstall process.</p>
<p>If the plugin can not be written without running code within the plugin, then the plugin should create a file named &#8216;uninstall.php&#8217; in the base plugin folder. This file will be called, if it exists, during the uninstall process bypassing the uninstall hook. The plugin, when using the &#8216;uninstall.php&#8217; should always check for the &#8216;WP_UNINSTALL_PLUGIN&#8217; constant, before executing.</p>
	</section>

	
			<section class="source">
			<p>
				<strong>Source file:</strong>
				<a href="https://developer.wordpress.org/reference/files/wp-includes/plugin.php/">wp-includes/plugin.php</a>
			</p>
						<p>
				<a href="#source-code">View source</a>
			</p>
					</section>
	
		<hr/>
	<section class="parameters">
		<h2>Parameters</h2>
		<dl>
									<dt>$file</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="string">string</span>)</span>
															<span class="required">(Required)</span>
															<span class="description">Plugin file.</span>
									</p>
							</dd>
									<dt>$callback</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="callback">callback</span>)</span>
															<span class="required">(Required)</span>
															<span class="description">The callback to run when the hook is called. Must be                           a static method or function.</span>
									</p>
							</dd>
					</dl>
	</section>
	
	
	
	
			<hr id="usage" />
		<section class="usage">
			<article class="used-by">
				<h2>Used by</h2>
				<ul>
															</ul>
			</article>