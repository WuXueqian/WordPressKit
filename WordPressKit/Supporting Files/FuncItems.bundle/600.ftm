<article id="post-1120" class="post-1120 wp-parser-function type-wp-parser-function status-publish hentry wp-parser-source-file-wp-includes_post-php wp-parser-package-post wp-parser-package-wordpress wp-parser-since-1-2-0">

	
	<h1><a href="https://developer.wordpress.org/reference/functions/get_posts/">get_posts ( <span class="arg-type">array</span>&nbsp;<span class="arg-name">$args</span>&nbsp;=&nbsp;<span class="arg-default">null</span> )</a></h1>

	<section class="summary">
		<p>Retrieve list of latest posts or posts matching criteria.</p>
	</section>


	<section class="description">
		<p>The defaults are as follows:</p>
	</section>

			<section class="return"><p><strong>Return:</strong> <span class='return-type'>(array)</span> List of posts.</p></section>
	
			<section class="source">
			<p>
				<strong>Source file:</strong>
				<a href="https://developer.wordpress.org/reference/files/wp-includes/post.php/">wp-includes/post.php</a>
			</p>
						<p>
				<a href="#source-code">View source</a>
			</p>
					</section>
	
		<hr/>
	<section class="parameters">
		<h2>Parameters</h2>
		<dl>
									<dt>$args</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="array">array</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description">Arguments to retrieve posts. <a href="https://developer.wordpress.org/reference/classes/WP_Query/parse_query">WP_Query::parse_query()</a> for more available arguments. <ul class="param-hash"><li><b>'numberposts'</b><br /><i><span class='type'>(int)</span></i> Total number of posts to retrieve. Is an alias of $posts_per_page in WP_Query. Accepts 1+ and -1 for all. Default 5. </li>
<li><b>'offset'</b><br /><i><span class='type'>(int)</span></i> The number of posts to offset before retrieval. Default 0. </li>
<li><b>'category'</b><br /><i><span class='type'>(int|string)</span></i> Category ID or comma-separated list of IDs (this or any children). Is an alias of $cat in WP_Query. Default 0. </li>
<li><b>'orderby'</b><br /><i><span class='type'>(string)</span></i> Which field to order posts by. Accepts post fields. Default 'date'. </li>
<li><b>'include'</b><br /><i><span class='type'>(array)</span></i> An array of post IDs to retrieve, sticky posts will be included. Is an alias of $post__in in WP_Query. Default empty array. </li>
<li><b>'exclude'</b><br /><i><span class='type'>(array)</span></i> An array of post IDs not to retrieve. Default empty array. </li>
<li><b>'meta_key'</b><br /><i><span class='type'>(string)</span></i> Custom field key. Default empty. </li>
<li><b>'meta_value'</b><br /><i><span class='type'>(mixed)</span></i> Custom field value. Default empty string. </li>
<li><b>'post_type'</b><br /><i><span class='type'>(string)</span></i> Post type. Default 'post'. </li>
<li><b>'suppress_filters'</b><br /><i><span class='type'>(bool)</span></i> Whether to suppress filters. Default true.</li>
</li></ul>
</span>
									</p>
								<p class="default">Default value: null</p>
							</dd>
					</dl>
	</section>
	
			<hr/>
		<section class="explanation">
			<h2>Explanation</h2>
			<p>The most appropriate use for get_posts is to create an array of posts based on a set of parameters. It retrieves a list of recent posts or posts matching this criteria. get_posts can also be used to create Multiple Loops, though a more direct reference to WP_Query using new WP_Query is preferred in this case.</p>
<p>The parameters of get_posts are similar to those of get_pages but are implemented quite differently, and should be used in appropriate scenarios. get_posts uses WP_Query, whereas get_pages queries the database more directly. Each have parameters that reflect this difference in implementation.</p>
<p>query_posts also uses WP_Query, but is not recommended because it directly alters the main loop by changing the variables of the global variable $wp_query. get_posts, on the other hand, simply references a new WP_Query object, and therefore does not affect or alter the main loop.</p>
<p>If you would like to alter the main query before it is executed, you can hook into it using pre_get_posts. If you would just like to call an array of posts based on a small and simple set of parameters within a page, then get_posts is your best option.</p>
		</section>
	
	
	
			<hr id="usage" />
		<section class="usage">
			<article class="used-by">
				<h2>Used by</h2>
				<ul>
												<li>
								<span>wp-includes/class-wp-customize-nav-menus.php:</span>
								<a href="https://developer.wordpress.org/reference/classes/wp_customize_nav_menus/load_available_items_query/">WP_Customize_Nav_Menus::load_available_items_query()</a>
							</li>
													<li>
								<span>wp-includes/post.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/get_children/">get_children()</a>
							</li>
													<li>
								<span>wp-admin/includes/image.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_generate_attachment_metadata/">wp_generate_attachment_metadata()</a>
							</li>
													<li>
								<span>wp-admin/includes/dashboard.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_dashboard_recent_drafts/">wp_dashboard_recent_drafts()</a>
							</li>
													<li>
								<span>wp-admin/includes/ajax-actions.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_ajax_find_posts/">wp_ajax_find_posts()</a>
							</li>
													<li>
								<span>wp-admin/includes/nav-menu.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_nav_menu_item_post_type_meta_box/">wp_nav_menu_item_post_type_meta_box()</a>
							</li>
													<li>
								<span>wp-includes/theme.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/get_uploaded_header_images/">get_uploaded_header_images()</a>
							</li>
													<li>
								<span>wp-includes/query.php:</span>
								<a href="https://developer.wordpress.org/reference/classes/wp_query/get_posts/">WP_Query::get_posts()</a>
							</li>
													<li>
								<span>wp-includes/link-template.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/get_boundary_post/">get_boundary_post()</a>
							</li>
													<li>
								<span>wp-includes/media.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/gallery_shortcode/">gallery_shortcode()</a>
							</li>
													<li>
								<span>wp-includes/media.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_playlist_shortcode/">wp_playlist_shortcode()</a>
							</li>
													<li>
								<span>wp-includes/post.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_get_recent_posts/">wp_get_recent_posts()</a>
							</li>
													<li>
								<span>wp-includes/nav-menu.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_get_nav_menu_items/">wp_get_nav_menu_items()</a>
							</li>
													<li>
								<span>wp-includes/class-wp-xmlrpc-server.php:</span>
								<a href="https://developer.wordpress.org/reference/classes/wp_xmlrpc_server/wp_getmedialibrary/">wp_xmlrpc_server::wp_getMediaLibrary()</a>
							</li>
													<li>
								<span>wp-includes/class-wp-xmlrpc-server.php:</span>
								<a href="https://developer.wordpress.org/reference/classes/wp_xmlrpc_server/wp_getpages/">wp_xmlrpc_server::wp_getPages()</a>
							</li>
																			<a href="#" class="show-more">Show 15 more used by</a>
							<a href="#" class="hide-more">Hide more used by</a>
										</ul>
			</article>