<article id="post-18550" class="post-18550 wp-parser-function type-wp-parser-function status-publish hentry wp-parser-source-file-wp-includes_formatting-php wp-parser-package-wordpress wp-parser-since-4-3-0">

	
	<h1><a href="https://developer.wordpress.org/reference/functions/format_for_editor/">format_for_editor ( <span class="arg-type">string</span>&nbsp;<span class="arg-name">$text</span>, &nbsp;<span class="arg-name">$default_editor</span>&nbsp;=&nbsp;<span class="arg-default">null</span> )</a></h1>

	<section class="summary">
		<p>Formats text for the editor.</p>
	</section>


	<section class="description">
		<p>Generally the browsers treat everything inside a textarea as text, but it is still a good idea to HTML entity encode <code>&lt;</code>, <code>&gt;</code> and <code>&amp;</code> in the content.</p>
<p>The filter <a href="https://developer.wordpress.org/reference/hooks/format_for_editor">&#8216;format_for_editor&#8217;</a> is applied here. If <code>$text</code> is empty the filter will be applied to an empty string.</p>
	</section>

			<section class="return"><p><strong>Return:</strong> <span class='return-type'>(string)</span> The formatted text after filter is applied.</p></section>
	
			<section class="source">
			<p>
				<strong>Source file:</strong>
				<a href="https://developer.wordpress.org/reference/files/wp-includes/formatting.php/">wp-includes/formatting.php</a>
			</p>
						<p>
				<a href="#source-code">View source</a>
			</p>
					</section>
	
		<hr/>
	<section class="parameters">
		<h2>Parameters</h2>
		<dl>
									<dt>$text</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="string">string</span>)</span>
															<span class="required">(Required)</span>
															<span class="description">The text to be formatted.</span>
									</p>
							</dd>
					</dl>
	</section>
	
	
	
	
			<hr id="usage" />
		<section class="usage">
			<article class="used-by">
				<h2>Used by</h2>
				<ul>
															</ul>
			</article>