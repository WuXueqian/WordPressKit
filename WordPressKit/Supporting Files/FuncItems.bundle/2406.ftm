<article id="post-3240" class="post-3240 wp-parser-function type-wp-parser-function status-publish hentry wp-parser-source-file-wp-includes_general-template-php wp-parser-package-template wp-parser-package-wordpress wp-parser-since-1-0-0">

	
	<h1><a href="https://developer.wordpress.org/reference/functions/wp_title/">wp_title ( <span class="arg-type">string</span>&nbsp;<span class="arg-name">$sep</span>&nbsp;=&nbsp;<span class="arg-default">'&amp;raquo;'</span>,  <span class="arg-type">bool</span>&nbsp;<span class="arg-name">$display</span>&nbsp;=&nbsp;<span class="arg-default">true</span>,  <span class="arg-type">string</span>&nbsp;<span class="arg-name">$seplocation</span>&nbsp;=&nbsp;<span class="arg-default">''</span> )</a></h1>

	<section class="summary">
		<p>Display or retrieve page title for all areas of blog.</p>
	</section>


	<section class="description">
		<p>By default, the page title will display the separator before the page title, so that the blog title will be before the page title. This is not good for title display, since the blog title shows up on most tabs and not what is important, which is the page that the user is looking at.</p>
<p>There are also SEO benefits to having the blog title after or to the &#8216;right&#8217; or the page title. However, it is mostly common sense to have the blog title to the right with most browsers supporting tabs. You can achieve this by using the seplocation parameter and setting the value to &#8216;right&#8217;. This change was introduced around 2.5.0, in case backwards compatibility of themes is important.</p>
	</section>

			<section class="return"><p><strong>Return:</strong> <span class='return-type'>(string|void)</span> String on retrieve.</p></section>
	
			<section class="source">
			<p>
				<strong>Source file:</strong>
				<a href="https://developer.wordpress.org/reference/files/wp-includes/general-template.php/">wp-includes/general-template.php</a>
			</p>
						<p>
				<a href="#source-code">View source</a>
			</p>
					</section>
	
		<hr/>
	<section class="parameters">
		<h2>Parameters</h2>
		<dl>
									<dt>$sep</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="string">string</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description">  How to separate the various items within the page title.</span>
									</p>
								<p class="default">Default value: '&amp;raquo;'</p>
							</dd>
									<dt>$display</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="bool">bool</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description">  Whether to display or retrieve title.</span>
									</p>
								<p class="default">Default value: true</p>
							</dd>
									<dt>$seplocation</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="string">string</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description"> Direction to display title, 'right'.</span>
									</p>
								<p class="default">Default value: ''</p>
							</dd>
					</dl>
	</section>
	
			<hr/>
		<section class="explanation">
			<h2>Explanation</h2>
			<h3><span id="Best_practices" class="mw-headline">Best practices</span></h3>
<p>Plugins might use the <a title="Plugin API/Filter Reference/wp title" href="https://developer.wordpress.org/reference/hooks/wp_title/">wp_title</a> filter to generate a value. While it is possible to construct a &#8220;title&#8221; by doing things such as concatenating with <code>bloginfo</code> (the Site Name), if you do not use the <code>wp_title</code> function in your theme, you will likely have errors or unexpected behavior.</p>
<h3>Return Values</h3>
<p>The function returns a concatenated string. It always queries the database for a default string; the value of the default string depends on the type of post or page:</p>
<dl>
<dt><strong>Single post</strong></dt>
<dd>the title of the post</dd>
<dt><strong>Date-based archive</strong> </dt>
<dd>the date (e.g., &#8220;2006&#8221;, &#8220;2006 &#8211; January&#8221;)</dd>
<dt><strong>Category</strong></dt>
<dd>the name of the category</dd>
<dt><strong>Author page</strong> </dt>
<dd>the public name of the user</dd>
</dl>
<p>The function then prepends or appends the <b>sep</b> string and returns the entire value.</p>
		</section>
	
	
	
			<hr id="usage" />
		<section class="usage">
			<article class="used-by">
				<h2>Used by</h2>
				<ul>
												<li>
								<span>wp-includes/feed.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/get_wp_title_rss/">get_wp_title_rss()</a>
							</li>
																</ul>
			</article>