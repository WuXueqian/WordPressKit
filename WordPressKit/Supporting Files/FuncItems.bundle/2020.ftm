<article id="post-2643" class="post-2643 wp-parser-function type-wp-parser-function status-publish hentry wp-parser-source-file-wp-includes_functions-php wp-parser-package-wordpress wp-parser-since-3-1-0">

	
	<h1><a href="https://developer.wordpress.org/reference/functions/wp_find_hierarchy_loop_tortoise_hare/">wp_find_hierarchy_loop_tortoise_hare ( <span class="arg-type">callback</span>&nbsp;<span class="arg-name">$callback</span>,  <span class="arg-type">int</span>&nbsp;<span class="arg-name">$start</span>,  <span class="arg-type">array</span>&nbsp;<span class="arg-name">$override</span>&nbsp;=&nbsp;<span class="arg-default">array()</span>,  <span class="arg-type">array</span>&nbsp;<span class="arg-name">$callback_args</span>&nbsp;=&nbsp;<span class="arg-default">array()</span>,  <span class="arg-type">bool</span>&nbsp;<span class="arg-name">$_return_loop</span>&nbsp;=&nbsp;<span class="arg-default">false</span> )</a></h1>

	<section class="summary">
		<p>Use the &quot;The Tortoise and the Hare&quot; algorithm to detect loops.</p>
	</section>


	<section class="description">
		<p>For every step of the algorithm, the hare takes two steps and the tortoise one. If the hare ever laps the tortoise, there must be a loop.</p>
	</section>

			<section class="return"><p><strong>Return:</strong> <span class='return-type'>(mixed)</span> Scalar ID of some arbitrary member of the loop, or array of IDs of all members of loop if               $_return_loop</p></section>
	
			<section class="source">
			<p>
				<strong>Source file:</strong>
				<a href="https://developer.wordpress.org/reference/files/wp-includes/functions.php/">wp-includes/functions.php</a>
			</p>
						<p>
				<a href="#source-code">View source</a>
			</p>
					</section>
	
		<hr/>
	<section class="parameters">
		<h2>Parameters</h2>
		<dl>
									<dt>$callback</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="callback">callback</span>)</span>
															<span class="required">(Required)</span>
															<span class="description">Function that accepts ( ID, callback_arg, ... ) and outputs parent_ID.</span>
									</p>
							</dd>
									<dt>$start</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="int">int</span>)</span>
															<span class="required">(Required)</span>
															<span class="description">The ID to start the loop check at.</span>
									</p>
							</dd>
									<dt>$override</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="array">array</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description"> An array of ( ID =&gt; parent_ID, ... ) to use instead of $callback.                                </span>
									</p>
								<p class="default">Default value: array()</p>
							</dd>
									<dt>$callback_args</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="array">array</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description"> Additional arguments to send to $callback. </span>
									</p>
								<p class="default">Default value: array()</p>
							</dd>
									<dt>$_return_loop</dt>
						<dd>
				<p class="desc">
										<span class="type">(<span class="bool">bool</span>)</span>
															<span class="required">(Optional)</span>
															<span class="description"> Return loop members or just detect presence of loop? Only set                                to true if you already know the given $start is part of a loop (otherwise                                the returned array might include branches). </span>
									</p>
								<p class="default">Default value: false</p>
							</dd>
					</dl>
	</section>
	
	
	
	
			<hr id="usage" />
		<section class="usage">
			<article class="used-by">
				<h2>Used by</h2>
				<ul>
												<li>
								<span>wp-includes/functions.php:</span>
								<a href="https://developer.wordpress.org/reference/functions/wp_find_hierarchy_loop/">wp_find_hierarchy_loop()</a>
							</li>
																</ul>
			</article>